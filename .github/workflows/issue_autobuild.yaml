name: Issue Autobuild Workflow

on:
  issues:
    types:
      - opened

jobs:
  autobuild:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue has the "docker-autobuild" label
        id: check-label
        run: echo "has_label=$(jq '.[].name | select(. == \"docker-autobuild\")' <<< '${{ toJson(github.event.issue.labels) }}')" >> $GITHUB_ENV

      - name: Retrieve existing version from file
        id: retrieve-version
        if: env.has_label == 'true'
        run: |
          existing_version=$(cat .github/autobuild_version 2>/dev/null || echo "0")
          echo "existing_version=$existing_version" >> $GITHUB_ENV

      - name: Generate semantic version from current date and increment if necessary
        id: generate-version
        if: env.has_label == 'true'
        run: |
          current_date=$(date +'%Y%m%d')
          existing_version="${{ steps.retrieve-version.outputs.existing_version }}"

          if [[ "$existing_version" == "$current_date" ]]; then
            version=$(cat .github/autobuild_version || echo "0")
            version=$((version + 1))
          else
            version="$current_date"
          fi
          echo "version=$version" >> $GITHUB_ENV

      - name: Save generated version to file
        id: save-version
        if: env.has_label == 'true'
        run: |
          echo "${{ steps.generate-version.outputs.version }}" > .github/autobuild_version

      - name: Checkout code
        if: env.has_label == 'true'
        uses: actions/checkout@v2

      - name: Download dependencies
        if: env.has_label == 'true'
        run: |
          curl -o emailproxy.py https://raw.githubusercontent.com/simonrob/email-oauth2-proxy/main/emailproxy.py

      - name: Build image
        if: env.has_label == 'true'
        run: |
          docker build . -t ghcr.io/blacktirion/email-oauth2-proxy-docker:${{ steps.generate-version.outputs.version }}

      - name: Publish image
        if: env.has_label == 'true'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        if: env.has_label == 'true'
        run: |
          docker push ghcr.io/blacktirion/email-oauth2-proxy-docker:${{ steps.generate-version.outputs.version }}
